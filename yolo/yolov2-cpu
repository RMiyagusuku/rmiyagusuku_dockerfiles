FROM ubuntu:xenial

ENV DEBIAN_FRONTEND noninteractive
ENV LANG C.UTF-8 
ENV NVIDIA_VISIBLE_DEVICES all

# proxy
ENV http_proxy "http://proxya.cc.utsunomiya-u.ac.jp:8080"
ENV https_proxy "http://proxya.cc.utsunomiya-u.ac.jp:8080"
ENV cvVersion="3.4.4"

ADD apt.conf /etc/apt/

# Basic libraries
RUN apt-get update && \
    apt-get install --yes --no-install-recommends \
        apt-utils bash-completion \
        build-essential make cmake pkg-config \
        gcc \
        sudo htop wget git \
        nano zip unzip && \
    rm -rf /var/lib/apt/lists/*

# OpenCV dependencies
RUN apt-get update && \
    apt-get -y remove x264 libx264-dev && \
    apt-get install --yes --no-install-recommends \
        build-essential checkinstall cmake pkg-config yasm \
        git gfortran \
        libjpeg8-dev libjasper-dev libpng12-dev \
        libtiff5-dev libtiff-dev \
        libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev \
        libxine2-dev libv4l-dev 

RUN cd /usr/include/linux && \
    ln -s -f ../libv4l1-videodev.h videodev.h

RUN apt-get install --yes --no-install-recommends \
        libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev \
        libgtk2.0-dev libtbb-dev qt5-default libqt5opengl5-dev \
        libatlas-base-dev \
        libfaac-dev libmp3lame-dev libtheora-dev \
        libvorbis-dev libxvidcore-dev \
        libopencore-amrnb-dev libopencore-amrwb-dev \
        libavresample-dev \
        x264 v4l-utils
 
# Optional dependencies
RUN apt-get install --yes --no-install-recommends \
        libprotobuf-dev protobuf-compiler \
        libgoogle-glog-dev libgflags-dev \
        libgphoto2-dev libeigen3-dev libhdf5-dev doxygen

# Python2
RUN apt-get install --yes --no-install-recommends \
        python-numpy

# Python3 
RUN apt-get install --yes --no-install-recommends \
        python3-dev python3-pip && \
    python3 -m  pip install --upgrade pip numpy && \
    apt-get install --yes --no-install-recommends \
        python3-testresources && \
    rm -rf /var/lib/apt/lists/*

# Get OpenCV and OpenCV contrib
RUN git clone https://github.com/opencv/opencv.git && \
    cd opencv && \
    git checkout $cvVersion

RUN git clone https://github.com/opencv/opencv_contrib.git && \
    cd opencv_contrib && \
    git checkout $cvVersion

RUN mkdir /opencv/build && \
    cd /opencv/build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
            -D INSTALL_C_EXAMPLES=ON \
            -D INSTALL_PYTHON_EXAMPLES=ON \
            -D WITH_TBB=ON \
            -D WITH_V4L=ON \
        -D WITH_QT=ON \
        -D WITH_OPENGL=ON \
        -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
        -D BUILD_EXAMPLES=ON .. && \
    make -j$(nproc) && \
    make install

# Install darknet
RUN git clone https://github.com/pjreddie/darknet && \
    cd darknet && \
    sed -i'' -- 's/OPENCV=0/OPENCV=1/g' Makefile && \ 
    make -j$(nproc) && \
    ldconfig

#get example weights
RUN cd darknet && \
    wget --quiet https://pjreddie.com/media/files/yolov2.weights


ENTRYPOINT exec /bin/bash
