ARG cuda_version=9.0
FROM rmiyagusuku/dlbox:base-${cuda_version}

ENV ROS_DISTRO kinetic
ENV http_proxy "http://proxya.cc.utsunomiya-u.ac.jp:8080"
ENV https_proxy "http://proxya.cc.utsunomiya-u.ac.jp:8080"
ENV no_proxy "localhost,127.0.0.0/8,::1"

ADD apt.conf /etc/apt/

# install packages
RUN apt-get update && apt-get install -q -y \
    dirmngr \
    gnupg2 \
    lsb-release \
    && rm -rf /var/lib/apt/lists/*

# setup keys
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# setup sources.list
RUN echo "deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main" > /etc/apt/sources.list.d/ros-latest.list

# install bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
    python-rosdep \
    python-rosinstall \
    python-vcstools \
    && rm -rf /var/lib/apt/lists/*

# setup environment
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

# bootstrap rosdep
RUN rosdep init \
    && rosdep update

# install ros packages
ENV ROS_DISTRO kinetic
RUN apt-get update && apt-get install -y \
        ros-$ROS_DISTRO-ros-core=1.3.2-0* \
        ros-$ROS_DISTRO-perception=1.3.2-0* \
        ros-$ROS_DISTRO-navigation \
        ros-$ROS_DISTRO-openslam-gmapping \
        ros-$ROS_DISTRO-diagnostic-updater \
        ros-$ROS_DISTRO-roslint \
        libaria-dev \
    && rm -rf /var/lib/apt/lists/*
   
RUN apt-get update && apt-get install python-rosinstall --no-install-recommends -y \
        python-rosinstall-generator \
        python-wstool \
        build-essential \
    && rm -rf /var/lib/apt/lists/*

# ros with python3
RUN python3 -m pip install --upgrade pip && \
    python3 -m pip install PyYAML rospkg catkin_pkg

RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> /etc/bash.bashrc && \
    echo "rospack profile" >> /etc/bash.bashrc && \
    /bin/bash /opt/ros/$ROS_DISTRO/setup.bash

RUN export uid=3000 gid=3000 && \
    mkdir -p /home/ros && \
    echo "ros:x:${uid}:${gid}:ros,,,:/home/ros:/bin/bash" >> /etc/passwd && \
    echo "ros:x:${uid}:" >> /etc/group && \
    echo "ros ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/ros && \
    chmod 0440 /etc/sudoers.d/ros && \
    chown ${uid}:${gid} -R /home/ros 

USER ros
ENV HOME /home/ros 
WORKDIR /home/ros


ENTRYPOINT exec /bin/bash

